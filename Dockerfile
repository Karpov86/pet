# Сборочный этап
FROM openjdk:17-jdk-slim AS build

# Установка рабочей директории: Устанавливаем рабочую директорию /app в обоих этапах,
# чтобы избежать проблем с относительными путями.
WORKDIR /app

# Скопируем файлы Maven и запустим команду для скачивания зависимостей.
# Кеширование зависимостей Maven: Разделяем команды копирования pom.xml,
# mvnw и .mvn и их выполнение до копирования исходного кода. Это позволяет
# кешировать зависимости и повторно использовать их при изменении только исходного кода.
COPY pom.xml mvnw ./
COPY .mvn .mvn
RUN ./mvnw dependency:resolve

# Скопируем исходные файлы и запустим сборку проекта
COPY src src
RUN ./mvnw package -DskipTests

# Производственный этап
FROM openjdk:17-jdk-slim

# Создадим непользовательского пользователя для безопасности
RUN useradd -ms /bin/bash appuser

# Установим рабочую директорию
WORKDIR /app

# Скопируем скомпилированный jar-файл из сборочного этапа
COPY --from=build /app/target/*.jar pet-app.jar

# Изменим права на файл jar
# Создание пользователя для безопасности:
# Создаем непользовательского пользователя appuser,
# чтобы приложение не запускалось с правами root, что улучшает безопасность контейнера.
RUN chown appuser:appuser pet-app.jar

# Переключимся на пользователя appuser
USER appuser

# Запустим приложение
ENTRYPOINT ["java", "-jar", "pet-app.jar"]
